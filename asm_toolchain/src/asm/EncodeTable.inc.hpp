// DO NOT EDIT â€” generated from table.csv

ADD_SIMPLE("nop", Sig({}), 0x00, 1);
ADD_SIMPLE("inte", Sig({}), 0x01, 1);
ADD_SIMPLE("intd", Sig({}), 0x02, 1);
ADD_LDI8(Reg::AC, 0x03);
ADD_LDABS16(Reg::AC, 0x04);
ADD_LDI8(Reg::XH, 0x05);
ADD_LDABS16(Reg::XH, 0x06);
ADD_LDI8(Reg::YL, 0x07);
ADD_LDABS16(Reg::YL, 0x08);
ADD_LDI8(Reg::YH, 0x09);
ADD_LDABS16(Reg::YH, 0x0A);
ADD_LDI8(Reg::FR, 0x0B);
ADD_LDABS16(Reg::FR, 0x0C);
ADD_LDI8(Reg::ZL, 0x0D);
ADD_LDABS16(Reg::ZL, 0x0E);
ADD_LDI8(Reg::ZH, 0x0F);
ADD_LDABS16(Reg::ZH, 0x10);
ADD_LDI16(Reg::X, 0x11);
ADD_LDI16(Reg::Y, 0x12);
ADD_LDI16(Reg::Z, 0x13);
ADD_LDI16(Reg::SP, 0x14);
ADD_SIMPLE("ldx-ac", Sig({}), 0x15, 1);
ADD_SIMPLE("ldx-xh", Sig({}), 0x16, 1);
ADD_SIMPLE("ldx-yl", Sig({}), 0x17, 1);
ADD_SIMPLE("ldx-yh", Sig({}), 0x18, 1);
ADD_SIMPLE("ldx-fr", Sig({}), 0x19, 1);
ADD_STABS16(Reg::AC, 0x1A);
ADD_STABS16(Reg::XH, 0x1B);
ADD_SIMPLE("inth", Sig({}), 0x1C, 1);
ADD_STABS16(Reg::YL, 0x1D);
ADD_STABS16(Reg::YH, 0x1E);
ADD_STABS16(Reg::FR, 0x1F);
ADD_STABS16(Reg::ZL, 0x20);
ADD_STABS16(Reg::ZH, 0x21);
ADD_SIMPLE("stx-ac", Sig({}), 0x22, 1);
ADD_SIMPLE("stx-xh", Sig({}), 0x23, 1);
ADD_SIMPLE("stx-yl", Sig({}), 0x24, 1);
ADD_SIMPLE("stx-yh", Sig({}), 0x25, 1);
ADD_SIMPLE("stx-fr", Sig({}), 0x26, 1);
ADD_MOV(Reg::XH, Reg::AC, 0x27);
ADD_MOV(Reg::YL, Reg::AC, 0x28);
ADD_MOV(Reg::YH, Reg::AC, 0x29);
ADD_MOV(Reg::FR, Reg::AC, 0x2A);
ADD_MOV(Reg::ZL, Reg::AC, 0x2B);
ADD_MOV(Reg::ZH, Reg::AC, 0x2C);
ADD_MOV(Reg::AC, Reg::XH, 0x2D);
ADD_MOV(Reg::YL, Reg::XH, 0x2E);
ADD_MOV(Reg::YH, Reg::XH, 0x2F);
ADD_MOV(Reg::FR, Reg::XH, 0x30);
ADD_MOV(Reg::ZL, Reg::XH, 0x31);
ADD_MOV(Reg::ZH, Reg::XH, 0x32);
ADD_MOV(Reg::AC, Reg::YL, 0x33);
ADD_MOV(Reg::XH, Reg::YL, 0x34);
ADD_MOV(Reg::YH, Reg::YL, 0x35);
ADD_MOV(Reg::FR, Reg::YL, 0x36);
ADD_MOV(Reg::ZL, Reg::YL, 0x37);
ADD_MOV(Reg::ZH, Reg::YL, 0x38);
ADD_MOV(Reg::AC, Reg::YH, 0x39);
ADD_MOV(Reg::XH, Reg::YH, 0x3A);
ADD_MOV(Reg::YL, Reg::YH, 0x3B);
ADD_MOV(Reg::FR, Reg::YH, 0x3C);
ADD_MOV(Reg::ZL, Reg::YH, 0x3D);
ADD_MOV(Reg::ZH, Reg::YH, 0x3E);
ADD_MOV(Reg::AC, Reg::FR, 0x3F);
ADD_MOV(Reg::XH, Reg::FR, 0x40);
ADD_MOV(Reg::YL, Reg::FR, 0x41);
ADD_MOV(Reg::YH, Reg::FR, 0x42);
ADD_MOV(Reg::ZL, Reg::FR, 0x43);
ADD_MOV(Reg::ZH, Reg::FR, 0x44);
ADD_MOV(Reg::AC, Reg::ZL, 0x45);
ADD_MOV(Reg::XH, Reg::ZL, 0x46);
ADD_MOV(Reg::YL, Reg::ZL, 0x47);
ADD_MOV(Reg::YH, Reg::ZL, 0x48);
ADD_MOV(Reg::FR, Reg::ZL, 0x49);
ADD_MOV(Reg::ZH, Reg::ZL, 0x4A);
ADD_MOV(Reg::AC, Reg::ZH, 0x4B);
ADD_MOV(Reg::XH, Reg::ZH, 0x4C);
ADD_MOV(Reg::YL, Reg::ZH, 0x4D);
ADD_MOV(Reg::YH, Reg::ZH, 0x4E);
ADD_MOV(Reg::FR, Reg::ZH, 0x4F);
ADD_MOV(Reg::ZL, Reg::ZH, 0x50);
ADD_MOV(Reg::SP, Reg::Z, 0x51);
ADD_MOV(Reg::Z, Reg::SP, 0x52);
ADD_MOV(Reg::Z, Reg::PC, 0x53);
ADD_SIMPLE("push-ac", Sig({}), 0x54, 1);
ADD_SIMPLE("push-xh", Sig({}), 0x55, 1);
ADD_SIMPLE("push-yl", Sig({}), 0x56, 1);
ADD_SIMPLE("push-yh", Sig({}), 0x57, 1);
ADD_SIMPLE("push-fr", Sig({}), 0x58, 1);
ADD_SIMPLE("push-zl", Sig({}), 0x59, 1);
ADD_SIMPLE("push-zh", Sig({}), 0x5A, 1);
ADD_SIMPLE("push-x", Sig({}), 0x5B, 1);
ADD_SIMPLE("push-y", Sig({}), 0x5C, 1);
ADD_SIMPLE("push-z", Sig({}), 0x5D, 1);
ADD_SIMPLE("push-pc", Sig({}), 0x5E, 1);
ADD_SIMPLE("pop-ac", Sig({}), 0x5F, 1);
ADD_SIMPLE("pop-xh", Sig({}), 0x60, 1);
ADD_SIMPLE("pop-yl", Sig({}), 0x61, 1);
ADD_SIMPLE("pop-yh", Sig({}), 0x62, 1);
ADD_SIMPLE("pop-fr", Sig({}), 0x63, 1);
ADD_SIMPLE("pop-zl", Sig({}), 0x64, 1);
ADD_SIMPLE("pop-zh", Sig({}), 0x65, 1);
ADD_SIMPLE("pop-x", Sig({}), 0x66, 1);
ADD_SIMPLE("pop-y", Sig({}), 0x67, 1);
ADD_SIMPLE("pop-z", Sig({}), 0x68, 1);
ADD_SIMPLE("jnz", Sig({OT::Imm16}), 0x69, 3);
ADD_SIMPLE("jnzx", Sig({}), 0x6A, 1);
ADD_SIMPLE("jz", Sig({OT::Imm16}), 0x6B, 3);
ADD_SIMPLE("jzx", Sig({}), 0x6C, 1);
ADD_SIMPLE("jnc", Sig({OT::Imm16}), 0x6D, 3);
ADD_SIMPLE("jncx", Sig({}), 0x6E, 1);
ADD_SIMPLE("jc", Sig({OT::Imm16}), 0x6F, 3);
ADD_SIMPLE("jcx", Sig({}), 0x70, 1);
ADD_SIMPLE("jp", Sig({OT::Imm16}), 0x71, 3);
ADD_SIMPLE("jpx", Sig({}), 0x72, 1);
ADD_SIMPLE("jm", Sig({OT::Imm16}), 0x73, 3);
ADD_SIMPLE("jmx", Sig({}), 0x74, 1);
ADD_SIMPLE("jmp", Sig({OT::Imm16}), 0x75, 3);
ADD_SIMPLE("jmpx", Sig({}), 0x76, 1);
ADD_SIMPLE("cnz", Sig({OT::Imm16}), 0x77, 3);
ADD_SIMPLE("cz", Sig({OT::Imm16}), 0x78, 3);
ADD_SIMPLE("cnc", Sig({OT::Imm16}), 0x79, 3);
ADD_SIMPLE("cc", Sig({OT::Imm16}), 0x7A, 3);
ADD_SIMPLE("cp", Sig({OT::Imm16}), 0x7B, 3);
ADD_SIMPLE("cm", Sig({OT::Imm16}), 0x7C, 3);
ADD_SIMPLE("call", Sig({OT::Imm16}), 0x7D, 3);
ADD_SIMPLE("rnz", Sig({}), 0x7E, 1);
ADD_SIMPLE("rz", Sig({}), 0x7F, 1);
ADD_SIMPLE("rnc", Sig({}), 0x80, 1);
ADD_SIMPLE("rc", Sig({}), 0x81, 1);
ADD_SIMPLE("rp", Sig({}), 0x82, 1);
ADD_SIMPLE("rm", Sig({}), 0x83, 1);
ADD_SIMPLE("ret", Sig({}), 0x84, 1);
ADD_SIMPLE("add-ac", Sig({}), 0x85, 1);
ADD_SIMPLE("add-xh", Sig({}), 0x86, 1);
ADD_SIMPLE("add-yl", Sig({}), 0x87, 1);
ADD_SIMPLE("add-yh", Sig({}), 0x88, 1);
ADD_SIMPLE("add-zl", Sig({}), 0x89, 1);
ADD_SIMPLE("add-zh", Sig({}), 0x8A, 1);
ADD_SIMPLE("addi", Sig({OT::Imm8}), 0x8B, 2);
ADD_SIMPLE("sub-ac", Sig({}), 0x8C, 1);
ADD_SIMPLE("sub-xh", Sig({}), 0x8D, 1);
ADD_SIMPLE("sub-yl", Sig({}), 0x8E, 1);
ADD_SIMPLE("sub-yh", Sig({}), 0x8F, 1);
ADD_SIMPLE("sub-zl", Sig({}), 0x90, 1);
ADD_SIMPLE("sub-zh", Sig({}), 0x91, 1);
ADD_SIMPLE("subi", Sig({OT::Imm8}), 0x92, 2);
ADD_SIMPLE("nand-ac", Sig({}), 0x93, 1);
ADD_SIMPLE("nand-xh", Sig({}), 0x94, 1);
ADD_SIMPLE("nand-yl", Sig({}), 0x95, 1);
ADD_SIMPLE("nand-yh", Sig({}), 0x96, 1);
ADD_SIMPLE("nand-zl", Sig({}), 0x97, 1);
ADD_SIMPLE("nand-zh", Sig({}), 0x98, 1);
ADD_SIMPLE("nandi", Sig({OT::Imm8}), 0x99, 2);
ADD_SIMPLE("xor-ac", Sig({}), 0x9A, 1);
ADD_SIMPLE("xor-xh", Sig({}), 0x9B, 1);
ADD_SIMPLE("xor-yl", Sig({}), 0x9C, 1);
ADD_SIMPLE("xor-yh", Sig({}), 0x9D, 1);
ADD_SIMPLE("xor-zl", Sig({}), 0x9E, 1);
ADD_SIMPLE("xor-zh", Sig({}), 0x9F, 1);
ADD_SIMPLE("xori", Sig({OT::Imm8}), 0xA0, 2);
ADD_SIMPLE("nor-ac", Sig({}), 0xA1, 1);
ADD_SIMPLE("nor-xh", Sig({}), 0xA2, 1);
ADD_SIMPLE("nor-yl", Sig({}), 0xA3, 1);
ADD_SIMPLE("nor-yh", Sig({}), 0xA4, 1);
ADD_SIMPLE("nor-zl", Sig({}), 0xA5, 1);
ADD_SIMPLE("nor-zh", Sig({}), 0xA6, 1);
ADD_SIMPLE("nori", Sig({OT::Imm8}), 0xA7, 2);
ADD_SIMPLE("adc-ac", Sig({}), 0xA8, 1);
ADD_SIMPLE("adc-xh", Sig({}), 0xA9, 1);
ADD_SIMPLE("adc-yl", Sig({}), 0xAA, 1);
ADD_SIMPLE("adc-yh", Sig({}), 0xAB, 1);
ADD_SIMPLE("adc-zl", Sig({}), 0xAC, 1);
ADD_SIMPLE("adc-zh", Sig({}), 0xAD, 1);
ADD_SIMPLE("adci", Sig({OT::Imm8}), 0xAE, 2);
ADD_SIMPLE("sbb-ac", Sig({}), 0xAF, 1);
ADD_SIMPLE("sbb-xh", Sig({}), 0xB0, 1);
ADD_SIMPLE("sbb-yl", Sig({}), 0xB1, 1);
ADD_SIMPLE("sbb-yh", Sig({}), 0xB2, 1);
ADD_SIMPLE("sbb-zl", Sig({}), 0xB3, 1);
ADD_SIMPLE("sbb-zh", Sig({}), 0xB4, 1);
ADD_SIMPLE("sbbi", Sig({OT::Imm8}), 0xB5, 2);
ADD_SIMPLE("inc-ac", Sig({}), 0xB6, 1);
ADD_SIMPLE("inc-xh", Sig({}), 0xB7, 1);
ADD_SIMPLE("inc-yl", Sig({}), 0xB8, 1);
ADD_SIMPLE("inc-yh", Sig({}), 0xB9, 1);
ADD_SIMPLE("inc-zl", Sig({}), 0xBA, 1);
ADD_SIMPLE("inc-zh", Sig({}), 0xBB, 1);
ADD_SIMPLE("dec-ac", Sig({}), 0xBC, 1);
ADD_SIMPLE("dec-xh", Sig({}), 0xBD, 1);
ADD_SIMPLE("dec-yl", Sig({}), 0xBE, 1);
ADD_SIMPLE("dec-yh", Sig({}), 0xBF, 1);
ADD_SIMPLE("dec-zl", Sig({}), 0xC0, 1);
ADD_SIMPLE("dec-zh", Sig({}), 0xC1, 1);
ADD_SIMPLE("icc-ac", Sig({}), 0xC2, 1);
ADD_SIMPLE("icc-xh", Sig({}), 0xC3, 1);
ADD_SIMPLE("icc-yl", Sig({}), 0xC4, 1);
ADD_SIMPLE("icc-yh", Sig({}), 0xC5, 1);
ADD_SIMPLE("icc-zl", Sig({}), 0xC6, 1);
ADD_SIMPLE("icc-zh", Sig({}), 0xC7, 1);
ADD_SIMPLE("dcb-ac", Sig({}), 0xC8, 1);
ADD_SIMPLE("dcb-xh", Sig({}), 0xC9, 1);
ADD_SIMPLE("dcb-yl", Sig({}), 0xCA, 1);
ADD_SIMPLE("dcb-yh", Sig({}), 0xCB, 1);
ADD_SIMPLE("dcb-zl", Sig({}), 0xCC, 1);
ADD_SIMPLE("dcb-zh", Sig({}), 0xCD, 1);
ADD_SIMPLE("not-ac", Sig({}), 0xCE, 1);
ADD_SIMPLE("not-xh", Sig({}), 0xCF, 1);
ADD_SIMPLE("not-yl", Sig({}), 0xD0, 1);
ADD_SIMPLE("not-yh", Sig({}), 0xD1, 1);
ADD_SIMPLE("not-zl", Sig({}), 0xD2, 1);
ADD_SIMPLE("not-zh", Sig({}), 0xD3, 1);
ADD_SIMPLE("cmp-ac", Sig({}), 0xD4, 1);
ADD_SIMPLE("cmp-xh", Sig({}), 0xD5, 1);
ADD_SIMPLE("cmp-yl", Sig({}), 0xD6, 1);
ADD_SIMPLE("cmp-yh", Sig({}), 0xD7, 1);
ADD_SIMPLE("cmp-zl", Sig({}), 0xD8, 1);
ADD_SIMPLE("cmp-zh", Sig({}), 0xD9, 1);
ADD_SIMPLE("cmpi", Sig({OT::Imm8}), 0xDA, 2);
ADD_SIMPLE("shl", Sig({}), 0xDB, 1);
ADD_SIMPLE("shr", Sig({}), 0xDC, 1);
ADD_SIMPLE("hlt", Sig({}), 0xDD, 1);
